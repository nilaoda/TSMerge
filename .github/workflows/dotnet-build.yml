name: Build and Release

on:
  workflow_dispatch:

env:
  DOTNET_SDK_VERSION: 9.x
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  set-date:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.get_date.outputs.date }}
    steps:
      - name: Get Date in UTC+8
        id: get_date
        run: echo "date=$(date -u -d '8 hours' +'%Y%m%d')" >> "$GITHUB_OUTPUT"

  build-win-x64-arm64:
    runs-on: windows-latest
    needs: set-date

    steps:
      - uses: actions/checkout@v1

      - name: Set up dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_SDK_VERSION }}

      - name: Install zip
        run: choco install zip --no-progress --yes

      - name: Publish [win]
        run: |
          dotnet publish src/TSMerge -r win-x64 -c Release -o artifact
          dotnet publish src/TSMerge -r win-arm64 -c Release -o artifact-arm64

      - name: Package [win]
        run: |
          cd artifact
          zip -r ../TSMerge_win-x64_${{ needs.set-date.outputs.date }}.zip .
          cd ../artifact-arm64
          zip -r ../TSMerge_win-arm64_${{ needs.set-date.outputs.date }}.zip .

      - name: Upload Artifact [win-x64]
        uses: actions/upload-artifact@v3.1.3
        with:
          name: TSMerge_win-x64
          path: TSMerge_win-x64_${{ needs.set-date.outputs.date }}.zip

      - name: Upload Artifact [win-arm64]
        uses: actions/upload-artifact@v3.1.3
        with:
          name: TSMerge_win-arm64
          path: TSMerge_win-arm64_${{ needs.set-date.outputs.date }}.zip

  build-linux-x64:
    runs-on: ubuntu-latest
    container: ubuntu:18.04
    needs: set-date

    steps:
      - run: apt-get update
      - run: apt-get install -y curl wget libicu-dev libcurl4-openssl-dev zlib1g-dev libkrb5-dev zip
      - uses: actions/checkout@v1

      - name: Set up dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_SDK_VERSION }}

      - name: Publish [linux-x64]
        run: dotnet publish src/TSMerge -r linux-x64 -c Release -o artifact

      - name: Package [linux-x64]
        run: |
          cd artifact
          zip -r ../TSMerge_linux-x64_${{ needs.set-date.outputs.date }}.zip .

      - name: Upload Artifact [linux-x64]
        uses: actions/upload-artifact@v3.1.3
        with:
          name: TSMerge_linux-x64
          path: TSMerge_linux-x64_${{ needs.set-date.outputs.date }}.zip

  build-linux-arm64:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-cross-arm64-20220312201346-b2c2436
    needs: set-date

    steps:
      - uses: actions/checkout@v1
      - name: Set up dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_SDK_VERSION }}

      - name: Publish [linux-arm64]
        run: dotnet publish src/TSMerge -r linux-arm64 -c Release -p:ObjCopyName=aarch64-linux-gnu-objcopy -p:CppCompilerAndLinker=clang-9 -p:SysRoot=/crossrootfs/arm64 -o artifact

      - name: Package [linux-arm64]
        run: |
          cd artifact
          zip -r ../TSMerge_linux-arm64_${{ needs.set-date.outputs.date }}.zip .

      - name: Upload Artifact[linux-arm64]
        uses: actions/upload-artifact@v3.1.3
        with:
          name: TSMerge_linux-arm64
          path: TSMerge_linux-arm64_${{ needs.set-date.outputs.date }}.zip

  build-mac-x64-arm64:
    runs-on: macos-latest
    needs: set-date

    steps:
      - uses: actions/checkout@v1

      - name: Set up dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_SDK_VERSION }}

      - name: Publish [osx]
        run: |
          dotnet publish src/TSMerge -r osx-x64 -c Release -o artifact
          dotnet publish src/TSMerge -r osx-arm64 -c Release -o artifact-arm64

      - name: Package [osx]
        run: |
          cd artifact
          zip -r ../TSMerge_osx-x64_${{ needs.set-date.outputs.date }}.zip . -x "*.dSYM/*"
          cd ../artifact-arm64
          zip -r ../TSMerge_osx-arm64_${{ needs.set-date.outputs.date }}.zip . -x "*.dSYM/*"

      - name: Upload Artifact [osx-x64]
        uses: actions/upload-artifact@v3.1.3
        with:
          name: TSMerge_osx-x64
          path: TSMerge_osx-x64_${{ needs.set-date.outputs.date }}.zip
          
      - name: Upload Artifact [osx-arm64]
        uses: actions/upload-artifact@v3.1.3
        with:
          name: TSMerge_osx-arm64
          path: TSMerge_osx-arm64_${{ needs.set-date.outputs.date }}.zip

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [build-win-x64-arm64,build-linux-x64,build-linux-arm64,build-mac-x64-arm64, set-date]

    steps:
      - name: Fetch artifacts
        uses: actions/download-artifact@v3

      - name: Get Release Time
        id: get_release_time
        run: echo "::set-output name=release_time::$(date -u -d '8 hours' +'%Y-%m-%d %H:%M:%S')"

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: alphabuild_${{ needs.set-date.outputs.date }}
          name: Build (${{ steps.get_release_time.outputs.release_time }})
          artifacts: "TSMerge_linux-x64/*,TSMerge_linux-arm64/*,TSMerge_osx-x64/*,TSMerge_osx-arm64/*,TSMerge_win-arm64/*,TSMerge_win-x64/*"
          draft: false
          allowUpdates: true
          generateReleaseNotes: true
